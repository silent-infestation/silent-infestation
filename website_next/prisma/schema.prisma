// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ========================================
//                 MODELS
// ========================================

// ----------- User -----------
model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  role      String
  name      String
  surname   String
  age       Int?
  society   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  sites    Site[]
  scans    Scan[]
  analyses Analyse[]
}

// ----------- Site -----------
model Site {
  id     Int    @id @default(autoincrement())
  url    String
  userId Int

  user User @relation(fields: [userId], references: [id])

  @@unique([userId, url])
}

model Scan {
  id        Int      @id @default(autoincrement())
  userId    Int
  url       String
  scannedAt DateTime @default(now())
  status    String
  isRunning Boolean  @default(false)

  user       User        @relation(fields: [userId], references: [id])
  analyse    Analyse?
  scanResult ScanResult?

  @@index([userId])
}

model Analyse {
  id           Int      @id @default(autoincrement())
  scanId       Int      @unique
  userId       Int
  date_analyse DateTime @default(now())
  resultats    String

  scan Scan @relation(fields: [scanId], references: [id])
  user User @relation(fields: [userId], references: [id])

  @@index([userId])
}

model ScanResult {
  id            Int  @id @default(autoincrement())
  scanId        Int  @unique
  totalFindings Int
  scan          Scan @relation(fields: [scanId], references: [id])

  crawledUrls CrawledUrl[]
  findings    SecurityFinding[]
}

model CrawledUrl {
  id           Int    @id @default(autoincrement())
  scanResultId Int
  url          String

  scanResult ScanResult @relation(fields: [scanResultId], references: [id])
}

model SecurityFinding {
  id           Int    @id @default(autoincrement())
  scanResultId Int
  type         String
  url          String
  detail       String
  confidence   String
  severity     String

  scanResult ScanResult @relation(fields: [scanResultId], references: [id])
}
